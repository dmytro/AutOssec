{
  "name": "ossec",
  "description": "Installs/Configures ossec",
  "long_description": "Description\n===========\nInstalls and configure ossec-servers and ossec-agents\nManage the key generation and distribution between a server and multiple agents\nClean queues on the server if needed (rid)\n\nRequirements\n============\nUbuntu 10.04 (Lucid)\n\nAttributes\n==========\n# General Attributes\nThe attributes below follow the same namespace syntax that OSSEC does. Refer to\nthe officiel [OSSEC Documentation](http://www.ossec.net/doc/syntax/ossec_config.html)\nfor more information.\n\nDefault attributes from the cookbook:\n\n    default[:version] = \"2.6\"\n    default[:ossec][:syslog_output][:ip] = \"127.0.0.1\"\n    default[:ossec][:syslog_output][:port] = \"514\"\n    default[:ossec][:syslog_output][:min_level] = \"5\"\n    default[:ossec][:receiver_port] = \"1514\"\n    default[:ossec][:log_alert_level] = \"1\"\n    default[:ossec][:email_alert_level] = \"7\"\n    default[:ossec][:agents] = {}\n\nDefault attributes from the ossec-server role:\n\n    :ossec => {\n      :email_notification => 'yes',\n      :email_to => [\n        'ossec@example.net',\n      ],\n      :email_from => 'ossec-server@example.net',\n      :smtp_server => 'localhost',\n      :white_list => [\n        '127.0.0.1',\n        '10.1.0.0/16'\n      ],\n      :email_alerts => {\n        'recipient@example.net' => {\n          'level' => '9',\n          'group' => 'syscheck',\n          'event_location_tag' => 'reputation',\n          'event_location_search' => 'roles:*mongodb*',\n          'format' => 'sms',\n          'rule_id' => '100001',\n          'tags' => [\n            'do_not_delay',\n            'do_not_group'\n          ]\n        }\n      },\n      :syscheck => {\n        :frequency => '7200',\n        :alert_new_files => 'yes',\n        :auto_ignore => 'no',\n        :directories => {\n          '/bin' => {\n            'report_changes' => 'no',\n            'realtime' => 'yes'\n          },\n          '/sbin' => {\n            'report_changes' => 'no',\n            'realtime' => 'yes'\n          },\n          '/usr/bin' => {\n            'report_changes' => 'no',\n            'realtime' => 'yes'\n          },\n          '/usr/sbin' => {\n            'report_changes' => 'no',\n            'realtime' => 'yes'\n          },\n          '/etc' => {\n            'report_changes' => 'yes',\n            'realtime' => 'yes'\n          },\n          '/tmp' => {\n            'report_changes' => 'yes',\n            'realtime' => 'no'\n          }\n        },\n        :ignore => [\n          '/etc/openvpn/openvpn-status.log',\n          '/etc/motd',\n          '/etc/mcollective/facts.yaml',\n          '/etc/blkid.tab',\n          '/etc/mtab',\n          '/etc/mail/statistics',\n          '/etc/random-seed',\n          '/etc/adjtime',\n          '/etc/prelink.cache',\n          '/etc/dnscache/stats',\n          '/etc/dnscache/log',\n          '/etc/dnscache2/stats',\n          '/etc/dnscache2/log',\n          '/etc/tinydns/stats',\n          '/etc/tinydns/log'\n        ]\n      },\n      :syslog_files => [\n        '/var/log/syslog',\n        '/var/log/auth.log',\n        '/var/log/daemon.log',\n        '/var/log/kern.log',\n        '/var/log/mail.log',\n        '/var/log/user.log',\n        '/var/log/cron.log'\n      ],\n\n```email_alerts``` is a hash of recipients and servers. Each recipient will\nreceive all of the alert for the listed location (the list is a regex).\n```event_location_tag``` must contain a valid chef tag. All the nodes listed by\nthat tag will generate a separate ```email_alerts``` rule.\nThis is additional to the default list ```email_to``` and is used to send alert to\nspecific recipients for a limited number of hosts only.\n\n# Local Rules Definitions\nRules are defined in JSON format and replicate the XML format of regular [OSSEC Rules\nSyntax](http://www.ossec.net/doc/syntax/head_rules.html)\nEach rule has a head, a body, tags and info (the last 2 being optional)\n\n    head=   <rule id=\"12345\" level=\"12\" frequency=\"45\" timeframe=\"60\">\n    body=     <description>Test Rule</description>\n    body=     <match>Big Error</match>\n    body=     <hostname>server1</hostname>\n    tags=     <same_source_ip />\n    tags=     <same_source_port />\n    info=     <info type=\"link\">http://IjustGotHacked.com</info>\n            </rule>\n\nThe section below are parsed by the template. The following items are mandatory:\n * head/level\n * body/description\n\n    :ossec =>\n      :rules => {\n        \"100001\" => {\n          :head => {\n            :level => \"7\",\n            :maxsize => \"65536\",\n            :frequency => \"100\",\n            :timeframe => \"3600\",\n            :ignore => \"5\",\n            :overwrite => \"68321\"\n          },\n          :body => {\n            :hostname_search => \"recipes:mms-agent\",\n            :description => \"Super Security Rule for application XYZ\",\n            :match => \"super dangerous error happened\",\n            :regex => \"^\\d+Hello World$\",\n            :decoded_as => \"vsftpd\",\n            :category => \"windows\",\n            :srcip => \"192.168.1.254\",\n            :dstip => \"10.1.6.23\",\n            :user => \"bob\",\n            :program_name => \"nginx\",\n            :time => \"09:00-18:00\",\n            :weekday => \"monday,tuesday\",\n            :id => \"404\",\n            :url => \"/changepassword.php\",\n            :if_sid => \"100238\",\n            :if_group => \"authentication_success\",\n            :if_level => \"13\",\n            :if_matched_sid => \"12037\",\n            :if_matched_group => \"adduser\",\n            :if_matched_level => \"7\",\n            :options => \"no_email_alert\",\n            :check_diff => \"true\",\n            :group => \"syscheck\"\n          },\n          :tags => [\n            \"same_source_ip\",\n            \"same_source_port\",\n            \"same_dst_port\",\n            \"same_location\"\n          ],\n          :infos => {\n            :link => \"http://trac.example.net/ticket/12345\",\n            :text => \"the link above contains additional information\"\n          }\n        }\n      }\n\n## hostname_search\nTo the exception of __hostname_search__, all attributes use the same syntax as the\nossec rule in XML format does.\n__hostname_search__ in this cookbook represents a search query that is executed by\nthe server recipe to populate the ```<hostname>``` with the proper list of hosts,\ndynamically pulled from chef. Search criterias can be anything that a chef search \ncan take. Example: ```recipe:mongodb\\:\\:replicaset and tags:reputation```\n\n# Local Decoders Definitions\nDecoders are defined in JSON format and replicate the XML format of regular\n[OSSEC Decoder Syntax](http://www.ossec.net/doc/syntax/head_decoders.html)\n\n    :ossec => {\n      :decoders => {\n        'apache-errorlog' => {\n          :program_name => '^httpd|^apache2',\n          :prematch => {\n            :parser => '^\\S+ [\\w+\\s*\\d+ \\S+ \\d+] [\\S+] |^[warn] |^[notice] |^[error]'\n          },\n\n        },\n        'apache-errorlog-ip-custom' => {\n          :parent => 'apache-errorlog',\n          :prematch => {\n            :offset => 'after_parent',\n            :parser => '^[client'\n          },\n          :regex => {\n            :offset => 'after_prematch',\n            :parser => '^ (\\d+.\\d+.\\d+.\\d+)]'\n          },\n          :order => 'srcip'\n        },\n        'web-accesslog-custom' => {\n          :parent => 'web-accesslog',\n          :type => 'web-log',\n          :prematch => {\n            :parser => '^\\d+.\\d+.\\d+.\\d+ |^::ffff:\\d+.\\d+.\\d+.\\d+'\n          },\n          :regex => {\n            :parser => '^\\d+.\\d+.\\d+.\\d+ \\S+ (\\d+.\\d+.\\d+.\\d+) \\S+ \\S+ \\S+ [\\S+ \\S\\d+] \"\\w+ (\\S+) HTTP\\S+ (\\d+) \\S+ \"(\\S+)\"'\n          },\n          :order => 'srcip, url, id, extra_data'\n        }\n      }\n    }\n\n```prematch``` and ```regex``` are hashes that can have an ```offset``` value and\nalways have a ```parser``` value. See the ossec documentation for more information.\n\nUsage\n=====\nrecipe[ossec-server] should be a stand alone installation\nrecipe[ossec-agent] should be added (via role[ossec-agent]) to all the nodes of the\nenvironment\n",
  "maintainer": "AWeber",
  "maintainer_email": "julienv@aweber.com",
  "license": "All rights reserved",
  "platforms": {
  },
  "dependencies": {
    "postfix": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.0.1"
}